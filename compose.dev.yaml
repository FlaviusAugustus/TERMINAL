name: terminal-dev
services:
  client:
    stdin_open: true
    container_name: terminal.client
    ports:
      - 5173:5173
    build:
      context: "./Client"
      dockerfile: "Dockerfile.dev"

    depends_on: ["server"]
    develop:
      watch:
        - action: sync
          x-initialSync: true
          path: "./Client"
          ignore:
            - node_modules/
          target: "/app"
        - action: rebuild
          path: package.json

  server:
    container_name: terminal.server
    ports:
      - 5006:5006
    build: "./Server/src"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
      - Postgres__ConnectionString=${Postgres__ConnectionString}
    depends_on:
      database:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: ./Server/src

  database:
    container_name: terminal.postgres
    image: postgres
    volumes:
      - ~/terminalData:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
    pull_policy: missing
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 1s
      timeout: 5s
      retries: 5

name: terminal
services:
  client:
    container_name: terminal.client
    restart: always
    depends_on:
      server:
        condition: service_healthy

  server:
    container_name: terminal.server
    restart: always
    environment:
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
      - Jwt__Issuer=${Jwt__Issuer}
      - Jwt__Audience=${Jwt__Audience}
      - Jwt__SecretKey=${Jwt__SecretKey}
      - Postgres__ConnectionString=${Postgres__ConnectionString}
      - Administrator__Email=${Administrator__Email}
      - Administrator__Password=${Administrator__Password}
    healthcheck:
      test: ["CMD", "curl", "-f", "server:5006/api/ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:17-bookworm
    container_name: terminal.postgres
    restart: always
    pull_policy: missing
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 1s
      timeout: 5s
      retries: 5
